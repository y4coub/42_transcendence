map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

map $host $redirect_host {
	~^(.*):\d+$ $1;
	default $host;
}

server {
	listen 8080;
	server_name _;

	return 301 https://$redirect_host:8443$request_uri;
}

server {
	listen 8443 ssl http2;
	server_name _;

	ssl_certificate /etc/nginx/certs/localhost.crt;
	ssl_certificate_key /etc/nginx/certs/localhost.key;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;

	add_header Strict-Transport-Security "max-age=31536000" always;
	add_header X-Content-Type-Options nosniff;
	add_header X-Frame-Options SAMEORIGIN;
	add_header X-XSS-Protection "1; mode=block";

	root /usr/share/nginx/html;
	index index.html;

	location /api/ {
		proxy_pass http://backend:3000/;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_buffering off;
	}

	location /ws/ {
		proxy_pass http://backend:3000/ws/;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_buffering off;
	}

	location /socket.io/ {
		proxy_pass http://backend:3000/socket.io/;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_buffering off;
	}

	location / {
		try_files $uri $uri/ /index.html;
	}
}
